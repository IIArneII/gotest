// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"test-client/internal/api/restapi/models"
)

// SetAPIKeyReader is a Reader for the SetAPIKey structure.
type SetAPIKeyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetAPIKeyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetAPIKeyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewSetAPIKeyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSetAPIKeyOK creates a SetAPIKeyOK with default headers values
func NewSetAPIKeyOK() *SetAPIKeyOK {
	return &SetAPIKeyOK{}
}

/* SetAPIKeyOK describes a response with status code 200, with default header values.

Ok
*/
type SetAPIKeyOK struct {
}

func (o *SetAPIKeyOK) Error() string {
	return fmt.Sprintf("[POST /set-api-key][%d] setApiKeyOK ", 200)
}

func (o *SetAPIKeyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewSetAPIKeyDefault creates a SetAPIKeyDefault with default headers values
func NewSetAPIKeyDefault(code int) *SetAPIKeyDefault {
	return &SetAPIKeyDefault{
		_statusCode: code,
	}
}

/* SetAPIKeyDefault describes a response with status code -1, with default header values.

error
*/
type SetAPIKeyDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the set Api key default response
func (o *SetAPIKeyDefault) Code() int {
	return o._statusCode
}

func (o *SetAPIKeyDefault) Error() string {
	return fmt.Sprintf("[POST /set-api-key][%d] setApiKey default  %+v", o._statusCode, o.Payload)
}
func (o *SetAPIKeyDefault) GetPayload() *models.Error {
	return o.Payload
}

func (o *SetAPIKeyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
